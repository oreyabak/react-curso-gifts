{"version":3,"sources":["Components/AddCategorias.js","Components/GifGridItem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategorias","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","name","key","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","c","ReactDOM","render","document","getElementById"],"mappings":"wPAGMA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAgB1C,OACC,0BAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAK,CAACC,KAAKR,EAAYS,IAAIT,IAA3B,mBAA2CO,OAC9DN,EAAc,OAMd,2BACCS,KAAK,OACLC,MAAOX,EACPY,SAjBuB,SAACT,GAC1BF,EAAcE,EAAEU,OAAOF,YAsBzBd,EAAciB,UAAY,CACzBhB,c,OAAeiB,EAAUC,KAAKC,YAGhBpB,QChCFqB,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEpC,OACC,yBAAKC,UAAU,0CACd,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCJOK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDACgCO,UAAUF,GAD1C,+DAEHG,MAAMR,GAFH,cAEhBS,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATd,kBAafY,GAbe,4CAAH,sDCCRM,EAAU,SAAC,GAAmB,IAAjBb,EAAgB,EAAhBA,UAAgB,ECDd,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KAAW,EACfT,mBAAS,CAClCgC,KAAM,GACNQ,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAgBzC,OAVAC,qBAAU,WACTlB,EAAQhB,GACNmC,MAAK,SAAAC,GACLH,EAAS,CACRV,KAAMa,EACNL,SAAS,SAGV,CAAC/B,IAEGgC,EDb0BK,CAAapB,GAAjCW,EAF4B,EAEjCL,KAAaQ,EAFoB,EAEpBA,QAErB,OACC,oCACC,wBAAIlB,UAAU,qCAAqCI,EAAUjB,MAC5D+B,GAAW,uBAAGlB,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAEbe,EAAOH,KAAI,SAAAC,GAAG,OACb,kBAAC,EAAD,eACCzB,IAAKyB,EAAIC,IACLD,UEiBIY,EA9BM,WAAM,MAEU/C,mBAAS,CAC5C,CAAES,KAAM,OAAQC,IAAK,MAHI,mBAEnBsC,EAFmB,KAEPjD,EAFO,KAW1B,OACC,oCACC,4CACA,kBAAC,EAAD,CAAeA,cAAeA,IAC9B,6BAIA,4BAIEiD,EAAWd,KAAI,SAACe,GAAD,OAAO,kBAAC,EAAD,CAASvC,IAAKuC,EAAEvC,IAAKgB,UAAWuB,UCrB3DC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d66ec548.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategorias = ({setCategorias}) => {\n\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategorias (cats => [{name:inputValue, key:inputValue}, ...cats]);\n\t\t\tsetInputValue('');\n\t\t}\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t</form>\n\t)\n}\n\nAddCategorias.prototype = {\n\tsetCategorias: PropTypes.func.isRequired\n}\n\nexport default AddCategorias;","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\t//console.log(id);\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t)\n}\n","\n\n\n\texport const getGifs = async (categoria) => {\n\t\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=1mVVW6kHAuVAH6nFMcveRoRvaYEgcNkm`;\n\t\tconst resp = await fetch(url);\n\t\tconst { data } = await resp.json();\n\n\t\tconst gifs = data.map(img => {\n\t\t\treturn {\n\t\t\t\tid: img.id,\n\t\t\t\ttitle: img.title,\n\t\t\t\turl: img.images?.downsized_medium.url\n\t\t\t}\n\t\t});\n\n\t\treturn gifs;\n\t}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ categoria }) => {\n\n\tconst { data:images, loading } = useFetchGifs(categoria); // hook personalizado.\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{categoria.name}</h3>\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{\n\t\t\t\t\timages.map(img => (\n\t\t\t\t\t\t<GifGridItem\n\t\t\t\t\t\t\tkey={img.id}\n\t\t\t\t\t\t\t{...img}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ({ name }) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(name)\n\t\t\t.then(imgs => {\n\t\t\t\tsetState({\n\t\t\t\t\tdata: imgs,\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t});\n\t}, [name]);\n\n\treturn state;\n}","import React, { useState } from 'react';\nimport AddCategorias from './AddCategorias';\nimport { GifGrid } from './GifGrid';\n\nconst GifExpertApp = () => {\n\t//const categorias = ['Filemon', 'Girl', 'she'];\n\tconst [categorias, setCategorias] = useState([\n\t\t{ name: 'Girl', key: 34 }\n\t]);\n\n\t//const handleAdd = () => {\n\t//setCategorias ([...categorias, 'UE4']); // Ãšltimo puesto.\n\t//\tsetCategorias([{ name: 'UE4', key: 333 }, ...categorias]); // Primer puesto.\n\t//}\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategorias setCategorias={setCategorias} />\n\t\t\t<hr />\n\n\t\t\t{/* <button onClick={handleAdd}>Agregar</button> */}\n\n\t\t\t<ol>\n\t\t\t\t{\n\t\t\t\t\t//categorias.map((c, i) => { return <li key={i}>{c}</li> })\n\t\t\t\t\t//categorias.map((c) => { return <li key={c.key}>{c.name}</li> })\n\t\t\t\t\tcategorias.map((c) => <GifGrid key={c.key} categoria={c} />)\n\t\t\t\t}\n\t\t\t</ol>\n\t\t</>\n\t);\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './Components/GifExpertApp';\n\n\nReactDOM.render(\n\t<GifExpertApp />,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}